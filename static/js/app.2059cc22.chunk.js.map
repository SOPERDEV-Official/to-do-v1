{"version":3,"sources":["component/styles.js","src/Main.js","App.js","assets/logo.png"],"names":["styles","Dimensions","get","width","height","StyleSheet","create","container","flex","alignItems","backgroundColor","input","borderWidth","borderRadius","textAlign","borderColor","position","bottom","marginTop","button","justifyContent","buttonText","textSize","fontWeight","task","taskText","fontSize","margin","header","taskButton","marginBottom","flexDirection","ToDo","useState","setTask","d","setD","t","setT","taskItems","setTaskItems","View","style","Text","color","today","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","getTime","Image","source","require","alignSelf","marginRight","ScrollView","map","item","index","TouchableOpacity","onPress","itemsCopy","splice","completeTask","TextInput","placeholder","value","onChangeText","text","console","log","textDecorationLine","Linking","openURL","App","module","exports"],"mappings":"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","file":"static/js/app.2059cc22.chunk.js","sourcesContent":["import { StyleSheet,Dimensions } from \"react-native\";\r\n\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nexport const styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        \r\n        backgroundColor:'#FDF2E9'\r\n    },\r\n    input: {\r\n        width: '60%',\r\n        borderWidth: 2,\r\n        height: 30,\r\n        borderRadius: 20,\r\n        textAlign: 'center',\r\n        borderColor: '#5D5E5F',\r\n        position: '',\r\n        bottom: 70,\r\n        marginTop:20\r\n        \r\n    },\r\n    button: {\r\n        width: 90,\r\n        borderWidth: 1,\r\n        height: 30,\r\n        marginTop: 20,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 10,\r\n        backgroundColor: '#F5CBA7',\r\n        position: '',\r\n        bottom: 10\r\n        \r\n    },\r\n    buttonText: {\r\n        textSize: 20,\r\n        fontWeight:'bold'\r\n    },\r\n    task: {\r\n        width: '60%',\r\n        marginTop: '7%',\r\n        textAlign: 'center',\r\n        height: 10,\r\n       \r\n      \r\n       \r\n    },\r\n    taskText: {\r\n        fontSize: 18,\r\n        margin: 5,\r\n        width:'80%'\r\n    },\r\n    header: {\r\n        fontSize: 40,\r\n        fontWeight: 'bold',\r\n        textAlign:'left',\r\n        \r\n    },\r\n    taskButton: {\r\n        width: '100%',\r\n        marginBottom: 10,\r\n        borderRadius: 10,\r\n        backgroundColor: '#F8C471',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        \r\n    }\r\n})\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, CheckBox,TouchableOpacity,FlatList,ScrollView,Linking,Image } from 'react-native';\r\n\r\nimport { styles } from '../component/styles';\r\n\r\nexport const ToDo = () => {\r\n    const [task, setTask] = useState('');\r\n    const [d, setD] = useState();\r\n    const [ t, setT] = useState();\r\n\r\n    const [taskItems, setTaskItems] = useState([]);\r\n    var _Date,_Time;\r\n    const handleAddTask = () => {\r\n        console.log(task);\r\n        setTaskItems([...taskItems, task]);\r\n        console.log(taskItems);\r\n        setTask(null);\r\n\r\n\r\n    }\r\n    const completeTask = (index) => {\r\n        let itemsCopy = [...taskItems];\r\n        itemsCopy.splice(index,1);\r\n        setTaskItems(itemsCopy);\r\n        \r\n    }\r\n\r\n    const getTime = () => {\r\n        var today = new Date();\r\n        var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n        var time = today.getHours()+' hrs' + \" : \" + today.getMinutes()+' min' + \" : \" + today.getSeconds()+' sec';\r\n       if (d !== date ) {\r\n            setD(date);\r\n        }\r\n       if (t!== time) {\r\n            setT(time)\r\n        }\r\n    }\r\n \r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={{backgroundColor:'#000',width:'100%'}}>\r\n                <Text style={{ fontWeight: 'bold', color: '#fff', textAlign: 'center' }}>This is an open-source project. You are allowed to pull request, collaborate in project or report any issue.</Text>\r\n                \r\n            </View>\r\n            \r\n            \r\n            {getTime()}\r\n            <View style={{flexDirection:'row'}}>\r\n                <Image source={require('../assets/logo.png')} style={{height:64,width:64,marginTop:5}}/>\r\n            <Text style={styles.header}> Open To Do</Text>\r\n            </View>\r\n            <Text style={{fontWeight:'bold',alignSelf:'flex-end',marginRight:10}}>Date : {d}</Text>\r\n            <Text style={{fontWeight:'bold',fontSize:15,alignSelf:'flex-end',marginRight:10}}>Time : {t}</Text>\r\n            <ScrollView style={styles.task}>\r\n        \r\n            {\r\n                    taskItems.map((item, index) => {\r\n                        \r\n                            return (\r\n                                <TouchableOpacity style={styles.taskButton}  key = { index } onPress={() => { completeTask(index) }}  >\r\n                                    <Text style={styles.taskText} >{item}</Text>\r\n                                  \r\n                                </TouchableOpacity>\r\n                            )\r\n                        \r\n                })\r\n            }\r\n            </ScrollView>\r\n            <TextInput placeholder='type your task' style={styles.input} value={task} onChangeText={text => setTask(text) } />\r\n            <TouchableOpacity style={styles.button} onPress={() => {\r\n                if (task !== null || undefined || '') {\r\n                    \r\n                    handleAddTask();\r\n                }\r\n               \r\n            }}>\r\n                <Text style={styles.buttonText}>Add Task</Text>\r\n                </TouchableOpacity>\r\n            <Text>v.0.0.3</Text>\r\n            <Text style={{textDecorationLine:'underline',fontWeight:'bold'}} onPress={()=>{Linking.openURL('https://www.soperdev.com')}}>A SOPERDEV Creation</Text>\r\n\r\n        </View>\r\n    )\r\n}\r\n","import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport {ToDo} from './src/Main';\n\nexport default function App() {\n  return (\n    <ToDo/>\n  );\n}\n\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.1fdc5519.png\";"],"sourceRoot":""}